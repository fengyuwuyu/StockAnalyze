<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stock.dao.StockMainMapper" >
  <resultMap id="BaseResultMap" type="com.stock.model.StockMain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="day" property="day" jdbcType="DATE" />
    <result column="open" property="open" jdbcType="REAL" />
    <result column="close" property="close" jdbcType="REAL" />
    <result column="max" property="max" jdbcType="REAL" />
    <result column="min" property="min" jdbcType="REAL" />
    <result column="volume" property="volume" jdbcType="BIGINT" />
    <result column="increase" property="increase" jdbcType="REAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, symbol, day, open, close, max, min, volume, increase
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stock_main
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock_main
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.stock.model.StockMain" >
    insert into stock_main ( symbol, day, 
      open, close, max, min, 
      volume, increase)
    values 
		<foreach collection="list" item="item" separator=",">
			<foreach collection="item" open="(" close=")" separator="," item="it" index="index">
				<if test="index==0">
					#{symbol},#{it}
				</if>
				<if test="index!=0">
					#{it}
				</if>
			</foreach>
		</foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.stock.model.StockMain" >
    insert into stock_main
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="symbol != null" >
        symbol,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="open != null" >
        open,
      </if>
      <if test="close != null" >
        close,
      </if>
      <if test="max != null" >
        max,
      </if>
      <if test="min != null" >
        min,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="increase != null" >
        increase,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="symbol != null" >
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="day != null" >
        #{day,jdbcType=DATE},
      </if>
      <if test="open != null" >
        #{open,jdbcType=REAL},
      </if>
      <if test="close != null" >
        #{close,jdbcType=REAL},
      </if>
      <if test="max != null" >
        #{max,jdbcType=REAL},
      </if>
      <if test="min != null" >
        #{min,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=BIGINT},
      </if>
      <if test="increase != null" >
        #{increase,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.model.StockMain" >
    update stock_main
    <set >
      <if test="symbol != null" >
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="day != null" >
        day = #{day,jdbcType=DATE},
      </if>
      <if test="open != null" >
        open = #{open,jdbcType=REAL},
      </if>
      <if test="close != null" >
        close = #{close,jdbcType=REAL},
      </if>
      <if test="max != null" >
        max = #{max,jdbcType=REAL},
      </if>
      <if test="min != null" >
        min = #{min,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=BIGINT},
      </if>
      <if test="increase != null" >
        increase = #{increase,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.model.StockMain" >
    update stock_main
    set symbol = #{symbol,jdbcType=VARCHAR},
      day = #{day,jdbcType=DATE},
      open = #{open,jdbcType=REAL},
      close = #{close,jdbcType=REAL},
      max = #{max,jdbcType=REAL},
      min = #{min,jdbcType=REAL},
      volume = #{volume,jdbcType=BIGINT},
      increase = #{increase,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="dataList" parameterType="com.stock.model.StockQuery" resultMap="BaseResultMap">
  	select c.symbol,c.increase from (select m.symbol,(n.close-m.close)/n.close increase
		from (select a.symbol,b.close from stock_main_id a
		LEFT JOIN stock_main b on a.symbol=b.symbol
		where b.day=#{begin}) m,
		(select a.symbol,max(b.close) close
		 from stock_main_id a
		LEFT JOIN stock_main b on a.symbol=b.symbol
		where b.day BETWEEN #{begin} and #{end} GROUP BY a.symbol) n
		where m.symbol=n.symbol) c where c.increase>0 ORDER BY c.increase DESC 
  </select>
  
  <select id="getTotal" parameterType="com.stock.model.StockQuery" resultType="int">
  	select count(*) from (select m.symbol,(n.close-m.close)/n.close increase
		from (select a.symbol,b.close from stock_main_id a
		LEFT JOIN stock_main b on a.symbol=b.symbol
		where b.day=#{begin}) m,
		(select a.symbol,max(b.close) close
		 from stock_main_id a
		LEFT JOIN stock_main b on a.symbol=b.symbol
		where b.day BETWEEN #{begin} and #{end} GROUP BY a.symbol) n
		where m.symbol=n.symbol) c where c.increase>0 ORDER BY c.increase DESC
  </select>
  
   <select id="dataList1" parameterType="com.stock.model.StockQuery" resultMap="BaseResultMap">
  		select * from stock_main where day = #{begin} ORDER BY increase DESC limit 0,100
  </select>
  
  <select id="getTotal1" parameterType="com.stock.model.StockQuery" resultType="int">
  		select count(*) from stock_main where day = #{begin} 
  </select>
  
  <select id="showChart" parameterType="com.stock.model.StockQuery" resultMap="BaseResultMap" >
  	select distinct symbol,day,open,close,max,min,volume,increase from stock_main where 
  	<trim suffixOverrides="and">
  		<if test="symbol!=null">
  			symbol=#{symbol} and
  		</if>
  		<if test="begin!=null">
  			<if test="end!=null">
  				day between #{begin} and #{end}
  			</if>
  			<if test="end==null">
  				day between DATE_ADD(#{begin},INTERVAL -42 day) and DATE_ADD(#{begin},INTERVAL 28 day)
  			</if>
  		</if>
  	</trim>
  </select>
  
  <select id="selectSymbols" resultType="java.lang.String">
  	select  symbol from stock_main_id where status=0 LIMIT 0,80
  </select>
  
  <update id="updateStatus" parameterType="java.util.Map" >
  		update stock_main_id set status = 1
  		where symbol in 
  		<foreach collection="symbols" item="item" open="(" close=")" separator=",">
  			#{item}
  		</foreach>
  </update>
  
  <insert id="insertStockAyalyseResult" parameterType="com.stock.model.StockAnalyseResult">
  	insert into stock_analyse_result(symbol,begin,end,type,increase) values(#{symbol},#{begin},#{end},#{type},#{increase})
  </insert>
  
  <select id="selectAll" resultType="java.lang.String">
  	select distinct symbol from stock_analyse_result_1
  </select>
  
  
  <select id="select1" parameterType="java.lang.String" resultType="com.stock.model.StockAnalyseResult">
  	select * from stock_analyse_result_1 where symbol = #{symbol}
  </select>
</mapper>